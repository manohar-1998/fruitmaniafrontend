[{"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\index.js":"1","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\App.js":"2","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\reportWebVitals.js":"3","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\producttable.js":"4","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Producttable.js":"5","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Orders.js":"6","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Navigation.js":"7","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Addproduct.js":"8","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Signin.js":"9","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Homepage.js":"10","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\auth\\index.js":"11","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Menu.js":"12","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Productedit.js":"13","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\auth\\AdminRoute.js":"14","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Apicalls.js":"15","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Backend.js":"16","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Piechart.js":"17"},{"size":542,"mtime":1612247648900,"results":"18","hashOfConfig":"19"},{"size":1218,"mtime":1614252056718,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1619,"mtime":1612245487349,"results":"22","hashOfConfig":"19"},{"size":4669,"mtime":1614252763213,"results":"23","hashOfConfig":"19"},{"size":2003,"mtime":1613126414179,"results":"24","hashOfConfig":"19"},{"size":7004,"mtime":1614252648791,"results":"25","hashOfConfig":"19"},{"size":4174,"mtime":1614153859056,"results":"26","hashOfConfig":"19"},{"size":4499,"mtime":1614249441141,"results":"27","hashOfConfig":"19"},{"size":770,"mtime":1612533783127,"results":"28","hashOfConfig":"19"},{"size":941,"mtime":1614171084616,"results":"29","hashOfConfig":"19"},{"size":1419,"mtime":1612944684003,"results":"30","hashOfConfig":"19"},{"size":4908,"mtime":1614170990111,"results":"31","hashOfConfig":"19"},{"size":586,"mtime":1613368776903,"results":"32","hashOfConfig":"19"},{"size":741,"mtime":1614171120860,"results":"33","hashOfConfig":"19"},{"size":47,"mtime":1613385741303,"results":"34","hashOfConfig":"19"},{"size":1341,"mtime":1614252145385,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gfniv2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\index.js",[],["78","79"],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\App.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\reportWebVitals.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\producttable.js",[],["80","81"],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Producttable.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Orders.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Navigation.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Addproduct.js",["82"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Segment,\r\n  TextArea,\r\n  Select,\r\n} from \"semantic-ui-react\";\r\nimport { isAuthenticated } from \"./auth\";\r\nimport { createProduct } from \"./Apicalls\";\r\nimport {toast} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\ntoast.configure()\r\nfunction Addproduct() {\r\n  const notify=()=>{\r\n    toast.success(<h3>Product Created Successfully</h3>,{\r\n      position:toast.POSITION.TOP_CENTER,\r\n      autoClose:3000\r\n    })\r\n  }\r\n  const { user } = isAuthenticated();\r\n  const history = useHistory();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    category: \"\",\r\n    grade: \"\",\r\n    description: \"\",\r\n    formData: new FormData(),\r\n  });\r\n  const handleChange = (name) => (event) => {\r\n    formData.set(name, event.target.value);\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n  const {\r\n    //  name, price, stock, category, grade, description,\r\n     formData } = values;\r\n  const Addproductsubmitbtn = (event) => {\r\n    console.log(\"Submit button clicked...\");\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    createProduct(user._id,formData).then((values) => {\r\n        if (values.error) {\r\n          setValues({ ...values, error: values.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n          });\r\n          notify();  // Using for the Toast message\r\n          console.log(\"After Toast method\")\r\n        }\r\n        history.push('/producttable');\r\n      });\r\n  };\r\n\r\n  function Productcancel(){\r\n    history.push('/producttable');\r\n  }\r\n\r\n  return (\r\n    <Segment style={{ width: \"500px\", marginLeft: \"515px\", marginTop: \"30px\" }}>\r\n      <header style={headerstyle}>\r\n        <b>Add Product</b>\r\n      </header>\r\n      <Divider />\r\n      <Segment color=\"brown\" inverted>\r\n        <Form>\r\n          <Form.Field\r\n            control={Input}\r\n            label=\"Name\"\r\n            placeholder=\"Product Name\"\r\n            onChange={handleChange(\"name\")}\r\n          />\r\n          <Form.Group widths=\"2\">\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Price\"\r\n              onChange={handleChange(\"price\")}\r\n            />\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Stock\"\r\n              onChange={handleChange(\"stock\")}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths=\"2\">\r\n            <Form.Field>\r\n              <label>Category</label>\r\n              <select\r\n                name=\"category\"\r\n                id=\"category\"\r\n                onChange={handleChange(\"category\")}\r\n              >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"FRUIT\">FRUIT</option>\r\n                <option value=\"VEG\">VEG</option>\r\n              </select>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Grade</label>\r\n              <select name=\"grade\" id=\"grade\" onChange={handleChange(\"grade\")}>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"A\">A</option>\r\n                <option value=\"B\">B</option>\r\n                <option value=\"C\">C</option>\r\n              </select>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Field\r\n            control={Input}\r\n            label=\"Upload Image\"\r\n            type=\"file\"\r\n            //   onChange={handleUpload}\r\n          />\r\n          <Form.Field\r\n            control={TextArea}\r\n            label=\"Description\"\r\n            placeholder=\"Tell us more...\"\r\n            onChange={handleChange(\"description\")}\r\n          />\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Button color=\"green\" onClick={Addproductsubmitbtn}>Create Product</Button>\r\n            <Button color=\"black\" onClick={Productcancel}>Cancel</Button>\r\n          </div>\r\n        </Form>\r\n      </Segment>\r\n    </Segment>\r\n  );\r\n}\r\nexport default Addproduct;\r\nconst headerstyle = {\r\n  textAlign: \"center\",\r\n  color: \"grey\",\r\n  fontSize: \"24px\",\r\n};\r\n","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Signin.js",["83"],"import React, { useState } from \"react\";\r\nimport logo from \"../pohulabs.png\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Form,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport { signin, authenticate, isAuthenticated } from \"./auth/index\";\r\n const Signin = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n    didRedirect: false,\r\n  });\r\n  const { email, password, error, didRedirect } = values;\r\n  const { user } = isAuthenticated();\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  }; \r\n  const onSubmit = (event) => {\r\n    console.log(\"Submit button clicked...\");\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    // API connection part here for your Sign in page...\r\n    signin({ email, password })\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.data.error, loading: false });\r\n        } else {\r\n          authenticate(data.data, () => {\r\n            setValues({\r\n              ...values,\r\n              didRedirect: true,\r\n            });\r\n            console.log(\"In else condition of Sign in page\",data.data)\r\n          });\r\n        }\r\n      })\r\n      .catch((error) =>\r\n        setValues({\r\n          ...values,\r\n          error: (\r\n            <h2\r\n              style={{\r\n                width: \"400px\",\r\n                marginLeft: \"645px\",\r\n                marginTop: \"30px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              \"Invalid Credentials\"\r\n            </h2>\r\n          ),\r\n          loading: false,\r\n        })\r\n      );\r\n  };\r\n  if (didRedirect) {\r\n    if (user && user.role === 1) {\r\n      return <Redirect to=\"/Piechart\" />;\r\n    } else {\r\n      setValues({ error: \"UnAuthorized User, Access Denied\" });\r\n    }\r\n  }\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const signInForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 offset-sm-4 text-center\">\r\n          <Container\r\n            style={{ marginTop: \"4em\", marginBottom: \"2em\" }}\r\n            textAlign=\"center\"\r\n          >\r\n            <img width=\"250\" height=\"200\" src={logo} alt=\"logo\" />\r\n          </Container>\r\n          <Grid\r\n            textAlign=\"center\"\r\n            marginbottom=\"150px\"\r\n            style={{ height: \"40vh\" }}\r\n            verticalAlign=\"middle\"\r\n          >\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n              <Header as=\"h2\" color=\"blue\">\r\n                Login to Account\r\n              </Header>\r\n              <Form size=\"large\">\r\n                <Segment stacked>\r\n                  <Form.Field>\r\n                    <label align=\"left\">\r\n                      <Icon name=\"envelope\" />\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      onChange={handleChange(\"email\")}\r\n                      value={email}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      type=\"email\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label align=\"left\">\r\n                      <Icon name=\"lock\" />\r\n                      Password{\" \"}\r\n                    </label>\r\n                    <input\r\n                      onChange={handleChange(\"password\")}\r\n                      value={password}\r\n                      Icon=\"user\"\r\n                      placeholder=\"Password\"\r\n                      className=\"form-control\"\r\n                      type=\"password\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Button color=\"teal\" fluid size=\"large\" onClick={onSubmit}>\r\n                    Submit\r\n                  </Button>\r\n                </Segment>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {errorMessage()}\r\n      {signInForm()}\r\n    </>\r\n  );\r\n};\r\nexport default Signin;\r\n","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Homepage.js",[],["84","85"],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\auth\\index.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Menu.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Productedit.js",["86","87","88"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory} from \"react-router\";\r\nimport { isAuthenticated } from \"./auth\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Segment,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\nimport { getproductById, getProducts, updatedProduct } from \"./Apicalls\";\r\nimport {toast} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nfunction Productedit(props) {\r\n  const notify=()=>{\r\n    toast.success(<h3>Product Updated Successfully</h3>,{\r\n      position:toast.POSITION.TOP_CENTER,\r\n      autoClose:3000\r\n    })\r\n  }\r\n  const [product, setValues] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    category: \"\",\r\n    grade: \"\",\r\n    description: \"\",\r\n    formData: \"\",\r\n  });\r\n  const { name, price, stock, category, grade, description, formData } = product;\r\n  const params = props.match.params.id\r\n  const onInputChange = (name) => (event) => {\r\n    formData.set(name, event.target.value);\r\n    setValues({ ...product, [name]: event.target.value });\r\n  }; \r\n  const Load = (params) => {\r\n    getproductById(params).then((res) => {\r\n      if (res.error) {\r\n        console.log(res.error);\r\n      } else {\r\n        setValues({\r\n          ...product,\r\n          id: res.data._id,\r\n          name: res.data.name,\r\n          price: res.data.price,\r\n          stock: res.data.stock,\r\n          grade: res.data.grade,\r\n          category: res.data.category,\r\n          description: res.data.description,\r\n          formData : new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const onSubmit = (params) => (event) => {\r\n    event.preventDefault();\r\n    const { user } = isAuthenticated();\r\n    updatedProduct(params, user._id, formData).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...product, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...product,\r\n          name: \"\",\r\n          price: \"\",\r\n          stock: \"\",\r\n          category: \"\",\r\n          grade: \"\",\r\n          description: \"\",\r\n        });\r\n        notify();\r\n      }\r\n      getProducts();\r\n      history.push(\"/producttable\");\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  function Editproductsubmitbtn() {\r\n    history.push(\"/Producttable\");\r\n  }\r\n  useEffect(() => {\r\n    Load(params);\r\n    // console.log(\"Inside use Effect params value=\",params) // Contains User id\r\n  }, [params]);\r\n  return (\r\n    <Segment style={{ width: \"500px\", marginLeft: \"515px\", marginTop: \"30px\" }}>\r\n      <header style={headerstyle}>\r\n        <b>Edit Product</b>\r\n      </header>\r\n      <Divider />\r\n      <Segment color=\"brown\" inverted >\r\n          <Form >\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={onInputChange(\"name\")}\r\n            />\r\n            <Form.Group widths=\"2\">\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Price\"\r\n                value={price}\r\n                onChange={onInputChange(\"price\")}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                label=\"Stock\"\r\n                value={stock}\r\n                onChange={onInputChange(\"stock\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group widths=\"2\">\r\n              <Form.Field>\r\n              <label>Category</label>\r\n               <select\r\n                  type=\"select\"\r\n                  onChange={onInputChange(\"category\")}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"FRUIT\">FRUIT</option>\r\n                  <option value=\"VEG\">VEG</option>\r\n                </select></Form.Field>\r\n                <Form.Field>\r\n              <label>Grade</label>\r\n               <select\r\n                  type=\"select\"\r\n                  onChange={onInputChange(\"grade\")}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                <option value=\"A\">A</option>\r\n                <option value=\"B\">B</option>\r\n                <option value=\"C\">C</option>\r\n                </select></Form.Field>\r\n            </Form.Group>\r\n            <Form.Field\r\n              control={TextArea}\r\n              value={description}\r\n              onChange={onInputChange(\"description\")}\r\n              label=\"Description\"\r\n              placeholder=\"Tell us more...\"\r\n            />\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <Button color=\"green\" onClick={onSubmit(params)}>\r\n                {\" \"}\r\n                Save\r\n              </Button>\r\n              <Button color=\"black\" onClick={Editproductsubmitbtn}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n      </Segment>\r\n    </Segment>\r\n  );\r\n}\r\nexport default Productedit;\r\nconst headerstyle = {\r\n  textAlign: \"center\",\r\n  color: \"grey\",\r\n  fontSize: \"24px\",\r\n};\r\n","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\auth\\AdminRoute.js",[],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Apicalls.js",["89"],"import axios from \"axios\";\r\nimport { isAuthenticated } from \"./auth\";\r\nconst {API} = require(\"./Backend\");\r\n// const { user } = isAuthenticated();\r\nexport const Signin = (userData)=> axios.post(`${API}/Signin`,userData);\r\nexport const Signout = () => axios.get(`${API}/signout`);\r\nexport const getProducts = () => axios.get(`${API}/products`);\r\nexport const updatedProduct = (productId,userid,data) => axios.put(`${API}/product/${productId}/${userid}`,data);\r\nexport const deleteproduct = (id,userid) => axios.delete(`${API}/product/${id}/${userid}`);\r\nexport const getproductById = (productId) =>  axios.get(`${API}/product/${productId}`);\r\nexport const createProduct = (userid,data) => axios.post(`${API}/product/create/${userid}`,data);\r\n","C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Backend.js",[],["90","91"],"C:\\Users\\Bunny\\Reactuse\\fruitmaniademo\\src\\pages\\Piechart.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":9},{"ruleId":"98","severity":1,"message":"102","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":8},{"ruleId":"92","replacedBy":"103"},{"ruleId":"94","replacedBy":"104"},{"ruleId":"98","severity":1,"message":"105","line":31,"column":31,"nodeType":"100","messageId":"101","endLine":31,"endColumn":39},{"ruleId":"98","severity":1,"message":"106","line":31,"column":41,"nodeType":"100","messageId":"101","endLine":31,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":85,"column":6,"nodeType":"109","endLine":85,"endColumn":14,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":25},{"ruleId":"92","replacedBy":"112"},{"ruleId":"94","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.",["114"],["115"],"'category' is assigned a value but never used.","'grade' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Load'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'isAuthenticated' is defined but never used.",["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [Load, params]",{"range":"119","text":"120"},[2381,2389],"[Load, params]"]